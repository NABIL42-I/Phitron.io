//‡¶®‡¶æ, ‡¶è‡¶ü‡¶ø 2-pointer technique ‡¶®‡ßü‡•§ ‡¶è‡¶ü‡¶ø ‡¶è‡¶ï‡¶ü‡¶ø single pass (O(n)) ‡¶™‡¶¶‡ßç‡¶ß‡¶§‡¶ø ‡¶Ø‡ßá‡¶ñ‡¶æ‡¶®‡ßá ‡¶Ü‡¶Æ‡¶∞‡¶æ ‡¶è‡¶ï‡¶ü‡¶ø ‡¶≤‡ßÅ‡¶™‡ßá‡¶∞ ‡¶Æ‡¶æ‡¶ß‡ßç‡¶Ø‡¶Æ‡ßá ‡¶∏‡¶∞‡ßç‡¶¨‡ßã‡¶ö‡ßç‡¶ö ‡¶è‡¶¨‡¶Ç ‡¶¶‡ßç‡¶¨‡¶ø‡¶§‡ßÄ‡ßü ‡¶∏‡¶∞‡ßç‡¶¨‡ßã‡¶ö‡ßç‡¶ö ‡¶â‡¶ö‡ßç‡¶ö‡¶§‡¶æ ‡¶ñ‡ßÅ‡¶Å‡¶ú‡ßá ‡¶¨‡ßá‡¶∞ ‡¶ï‡¶∞‡¶õ‡¶ø‡•§
#include<bits/stdc++.h>
using namespace std;
int main(){
    int q;cin>>q;
    while(q--){ 
    vector<int>v;
    int n;cin>>n;
    while(n--){
        int val;cin>>val;
        v.push_back(val);
    }
    int mx1=INT_MIN,mx2 = INT_MIN;
    int f = 0,e =0;
    for(int i =0;i<v.size();i++){
        if(v[i]>mx1){
            mx2 = mx1;
            mx1 = v[i];
            e = f; // ‡¶™‡ßÅ‡¶∞‡¶æ‡¶®‡ßã ‡¶∏‡¶∞‡ßç‡¶¨‡ßã‡¶ö‡ßç‡¶ö ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ‡¶∞ ‡¶á‡¶®‡¶°‡ßá‡¶ï‡ßç‡¶∏ ‡¶∏‡¶Ç‡¶∞‡¶ï‡ßç‡¶∑‡¶£
            f = i;
        }
       else if(v[i]>mx2 && mx1!=v[i]){ 
       mx2 = v[i];
       e = i;
       }
    }

   if(f<e)
   cout<<f<<" "<<e<<endl;
   else 
   cout<<e<<" "<<f<<endl;
}
return 0;
}
// üîπ 2-pointer Technique ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ñ‡ßç‡¶Ø‡¶æ
// 2-pointer technique ‡¶∏‡¶æ‡¶ß‡¶æ‡¶∞‡¶£‡¶§ ‡¶§‡¶ñ‡¶® ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü ‡¶Ø‡¶ñ‡¶® ‡¶¶‡ßÅ‡¶á‡¶ü‡¶ø ‡¶≠‡¶ø‡¶®‡ßç‡¶® ‡¶™‡ßü‡ßá‡¶®‡ßç‡¶ü‡¶æ‡¶∞ (indices) ‡¶®‡¶ø‡ßü‡ßá ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶∏‡¶Æ‡¶æ‡¶ß‡¶æ‡¶® ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü, ‡¶è‡¶¨‡¶Ç ‡¶¶‡ßÅ‡¶á ‡¶¶‡¶ø‡¶ï ‡¶•‡ßá‡¶ï‡ßá ‡¶Ü‡¶ó‡¶æ‡¶®‡ßã ‡¶¨‡¶æ ‡¶∏‡¶Ç‡¶ï‡ßÅ‡¶ö‡¶ø‡¶§ (shrink) ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡•§

// ‡¶Ø‡ßá‡¶Æ‡¶®, Container With Most Water ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ‡ßü, ‡¶Ü‡¶Æ‡¶∞‡¶æ ‡¶¶‡ßÅ‡¶ü‡¶ø ‡¶™‡ßü‡ßá‡¶®‡ßç‡¶ü‡¶æ‡¶∞ ‡¶®‡¶ø‡¶ö‡ßç‡¶õ‡¶ø:

// i = 0 (‡¶¨‡¶æ‡¶Æ ‡¶•‡ßá‡¶ï‡ßá ‡¶∂‡ßÅ‡¶∞‡ßÅ)
// j = n-1 (‡¶°‡¶æ‡¶® ‡¶•‡ßá‡¶ï‡ßá ‡¶∂‡ßÅ‡¶∞‡ßÅ)
// ‡¶™‡ßç‡¶∞‡¶§‡¶ø ‡¶ß‡¶æ‡¶™‡ßá, ‡¶Ü‡¶Æ‡¶∞‡¶æ i ‡¶¨‡¶æ j ‡¶ï‡ßá ‡¶∏‡¶∞‡¶ø‡ßü‡ßá ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ‡¶∞ ‡¶∏‡¶Æ‡¶æ‡¶ß‡¶æ‡¶® ‡¶ï‡¶∞‡¶õ‡¶ø‡•§